# -*- coding: utf-8 -*-
"""Distribucion_probabilidad_discretas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aDoHXnTL4uqNZk0BQFD0WWk5SvRFSYlB

## **Distribuciones de probabilidad discretas**

***Presenta: Vanessa Cristell Torres López***
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import binom, poisson, geom

# Parámetros de las distribuciones
n_binomial = 10     # Número de ensayos en la binomial
p_binomial = 0.5    # Probabilidad de éxito en la binomial

lambda_poisson = 3  # Parámetro lambda para la distribución Poisson

p_geometrica = 0.3  # Probabilidad de éxito en la distribución geométrica

# Rango de valores para las variables aleatorias
x_binomial = np.arange(0, n_binomial + 1)  # Valores posibles para la distribución binomial
x_poisson = np.arange(0, 15)               # Valores posibles para la distribución Poisson
x_geometrica = np.arange(1, 15)            # Valores posibles para la distribución geométrica

# Cálculo de las probabilidades (PMF)
binomial_pmf = binom.pmf(x_binomial, n_binomial, p_binomial)
poisson_pmf = poisson.pmf(x_poisson, lambda_poisson)
geometrica_pmf = geom.pmf(x_geometrica, p_geometrica)

# Creación de subgráficos para cada distribución
fig, axs = plt.subplots(1, 3, figsize=(15, 5))

# Gráfico para la distribución Binomial
axs[0].stem(x_binomial, binomial_pmf, basefmt=" ", use_line_collection=True)
axs[0].set_title("Distribución Binomial (n=10, p=0.5)")
axs[0].set_xlabel("Número de éxitos (k)")
axs[0].set_ylabel("P(X = k)")

# Gráfico para la distribución Poisson
axs[1].stem(x_poisson, poisson_pmf, basefmt=" ", use_line_collection=True)
axs[1].set_title("Distribución Poisson (λ=3)")
axs[1].set_xlabel("Número de eventos (k)")
axs[1].set_ylabel("P(X = k)")

# Gráfico para la distribución Geométrica
axs[2].stem(x_geometrica, geometrica_pmf, basefmt=" ", use_line_collection=True)
axs[2].set_title("Distribución Geométrica (p=0.3)")
axs[2].set_xlabel("Número de ensayos (k)")
axs[2].set_ylabel("P(X = k)")

# Mostrar las gráficas
plt.tight_layout()
plt.show()