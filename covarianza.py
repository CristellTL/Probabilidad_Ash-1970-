# -*- coding: utf-8 -*-
"""Covarianza.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KvDYuyB87vztlmEMge9YzL67jl8DbBmS

## **Cálculo de covarianza a través de momentos conjuntos**

***Presenta: Vanessa Cristell Torres López***
"""

import numpy as np

# Función para calcular la covarianza usando momentos centrales conjuntos
def covarianza_momentos_conjuntos(X, Y):
    """
    Calcula la covarianza entre X y Y usando momentos centrales conjuntos.
    :param X: Muestra de la variable aleatoria X
    :param Y: Muestra de la variable aleatoria Y
    :return: Covarianza entre X y Y
    """
    # Calcular las medias de X y Y
    E_X = np.mean(X)
    E_Y = np.mean(Y)

    # Calcular el momento central conjunto de orden (1,1)
    momento_11 = np.mean((X - E_X) * (Y - E_Y))

    return momento_11

# Generar muestras aleatorias de dos distribuciones normales
np.random.seed(42)  # Para reproducibilidad
X = np.random.normal(loc=5, scale=2, size=1000)
Y = np.random.normal(loc=3, scale=1, size=1000)

# Calcular la covarianza usando la función de momentos centrales conjuntos
cov_momentos = covarianza_momentos_conjuntos(X, Y)

# Verificar la covarianza utilizando la función incorporada de numpy
cov_numpy = np.cov(X, Y, ddof=0)[0, 1]

cov_momentos, cov_numpy