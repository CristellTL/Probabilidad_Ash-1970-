# -*- coding: utf-8 -*-
"""Densidad_marginalBD_discreta.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VrPYeGnTwKEjkCtwzVJIeHbUAkkw7TWV

## **Cálculo de la densidad marginal discreta en dos dimensiones**

***Presenta: Vanessa Cristell Torres López***
"""

import numpy as np
import matplotlib.pyplot as plt

# Definición de la tabla de probabilidad conjunta para dos variables X e Y
# La tabla es una matriz de probabilidades donde cada entrada representa P(X=x, Y=y)
P_XY = np.array([[0.1, 0.2],
                 [0.3, 0.4]])

# Nombres para los valores de X e Y para visualización
x_values = ['x1', 'x2']
y_values = ['y1', 'y2']

# Calcular la probabilidad marginal de X
P_X = np.sum(P_XY, axis=1)

# Calcular la probabilidad marginal de Y
P_Y = np.sum(P_XY, axis=0)

# Mostrar la tabla de probabilidad conjunta
print("Tabla de probabilidad conjunta P(X, Y):")
print(P_XY)

# Mostrar las probabilidades marginales
print("\nProbabilidad marginal de X:")
for i, x in enumerate(x_values):
    print(f"P(X={x}) = {P_X[i]:.2f}")

print("\nProbabilidad marginal de Y:")
for j, y in enumerate(y_values):
    print(f"P(Y={y}) = {P_Y[j]:.2f}")

# Visualización de las probabilidades marginales
fig, axs = plt.subplots(1, 2, figsize=(12, 5))

# Gráfico de la probabilidad marginal de X
axs[0].bar(x_values, P_X, color='skyblue')
axs[0].set_title('Probabilidad Marginal de X')
axs[0].set_xlabel('Valores de X')
axs[0].set_ylabel('Probabilidad')

# Gráfico de la probabilidad marginal de Y
axs[1].bar(y_values, P_Y, color='salmon')
axs[1].set_title('Probabilidad Marginal de Y')
axs[1].set_xlabel('Valores de Y')
axs[1].set_ylabel('Probabilidad')

# Ajustar el diseño y mostrar las gráficas
plt.tight_layout()
plt.show()